{"version":3,"sources":["ProjectToast.js","ProjectHeading.js","ProjectNavDropdown.js","ProjectNavbar.js","ProjectMessages.js","ProjectInput.js","ChatApp.js","App.js","serviceWorker.js","index.js"],"names":["require","ProjectToast","react_default","a","createElement","react_toastify","hideProgressBar","newestOnTop","autoClose","closeOnClick","Component","ProjectHeading","this","props","name","src_ProjectToast","ProjectNavDropdown","_this","users","NavDropdown","title","id","user_list","map","i","notify","notifications","Item","href","key","onClick","e","preventDefault","updateclicked","Badge","variant","ProjectNavbar","Navbar","collapseOnSelect","expand","bg","fixedTop","Brand","Toggle","aria-controls","Collapse","Nav","className","src_ProjectNavDropdown","ProjectMessages","array","messages","opponent","msg","message","username","defaultProps","ProjectInput","type","disabled","placeholder","required","Button","style","display","handleclick","ChatApp","Object","classCallCheck","console","log","possibleConstructorReturn","getPrototypeOf","call","bind","assertThisInitialized","sendnotifications","state","socket","openSocket","Math","floor","random","emit","on","list","JSON","stringify","setState","count","document","getElementById","allmsg","push","toastmsg","toast","info","bodyClassName","css","fontSize","addEventListener","event","keyCode","click","focus","val","value","component","receiver","sender","length","objDiv","scrollTop","scrollHeight","src_ProjectHeading","src_ProjectNavbar","src_ProjectMessages","src_ProjectInput","App","src_ChatApp","Boolean","window","location","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1398b91e.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nrequire('./testcss.css');\r\n\r\nclass ProjectToast extends Component {\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<ToastContainer hideProgressBar newestOnTop autoClose={3000} closeOnClick/>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default ProjectToast;","import React, { Component } from 'react';\r\nimport ProjectToast from './ProjectToast.js';\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nrequire('./testcss.css');\r\n\r\nclass ProjectHeading extends Component {\r\n\trender() {\r\n\t\treturn(\r\n\t\t\t<h3>\r\n\t\t\t\tChat Box <br/>\r\n\t        \t<h6>Username: {this.props.name}</h6>\r\n\t        \t<ProjectToast />\r\n\t        </h3>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default ProjectHeading;","import React, { Component } from 'react';\r\nimport { Badge, NavDropdown } from 'react-bootstrap';\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nrequire('./testcss.css');\r\n\r\nclass ProjectNavDropdown extends Component {\r\n  render() {\r\n    if ( this.props.users > 0 ){\r\n      return (\r\n        <div>\r\n          <NavDropdown title=\"View Users\" id=\"collasible-nav-dropdown\">\r\n            {\r\n              this.props.user_list.map( ( name, i ) => {\r\n                var notify = this.props.notifications[name];\r\n                if (!notify) { notify = 0;}\r\n                if ( name !== this.props.name ) {\r\n                  if ( notify > 0 ) {\r\n                    return <div><NavDropdown.Item href={\"#\"+i+'link'} key={i}  onClick={(e) => { e.preventDefault(); this.props.updateclicked({name});}}>{name} <Badge variant=\"dark\"> {notify} </Badge></NavDropdown.Item></div>\r\n                  }\r\n                  else{\r\n                    return <div><NavDropdown.Item key={i} href={'#' + i + 'link'} onClick={(e) => { e.preventDefault(); this.props.updateclicked({name});}}>{name}</NavDropdown.Item></div>\r\n                  }\r\n                }\r\n                return '';\r\n              })\r\n            }\r\n          </NavDropdown>\r\n        </div>\r\n      );\r\n    }\r\n    return '';\r\n  }\r\n}\r\n\r\nexport default ProjectNavDropdown;\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport ProjectNavDropdown from './ProjectNavDropdown.js';\r\nimport { Badge, Navbar, Nav } from 'react-bootstrap';\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nrequire('./testcss.css');\r\n\r\nclass ProjectNavbar extends Component {\r\n  render(){\r\n    return (\r\n      <div>\r\n       <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\" fixedTop>\r\n          <Navbar.Brand href=\"#home\">Active Users <Badge variant=\"light\"> {this.props.users } </Badge> </Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n          <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n            <Nav className=\"mr-auto\">\r\n              <ProjectNavDropdown \r\n                users={this.props.users}\r\n                notifications={this.props.notifications}\r\n                name={this.props.name}\r\n                updateclicked={this.props.updateclicked}\r\n                user_list={this.props.user_list}\r\n              />\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Navbar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default ProjectNavbar;\r\n","import React, { Component } from 'react';\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nrequire('./testcss.css');\r\n\r\nclass ProjectMessages extends Component {\r\n  render() {\r\n\r\n    var allmsg = this.props.messages;\r\n    var array = allmsg[this.props.opponent];\r\n    if ( !array) { array = []; }\r\n\r\n\r\n    return (\r\n      <div className='messages' id='messageList'>\r\n        <div className=\"chatboxclass\" id=\"chatbox\">\r\n          { \r\n              array.map((msg,i)=> {\r\n                if ( msg.message && msg.message !== '') {\r\n                  if ( msg.username === this.props.name){\r\n                    return (<div className='message from-me' key={i}>\r\n                         <div className='message-body'>\r\n                          {msg.message}\r\n                        </div>\r\n                      </div>\r\n                    );\r\n                  }\r\n\r\n                  return (\r\n                    <div className='message ' key={i}>\r\n                      <div className='message-body'>\r\n                        <div className='username'>\r\n                          {msg.username}\r\n                        </div>\r\n                        {msg.message}\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                }\r\n                return '';\r\n              })\r\n          } \r\n                \r\n        </div>          \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectMessages.defaultProps = {\r\n  messages: {},\r\n  opponent: ''\r\n};\r\n\r\nexport default ProjectMessages;\r\n\r\n","import React, { Component } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nrequire('./testcss.css');\r\n\r\nclass ProjectInput extends Component {\r\n\trender(){\r\n\t\treturn (\r\n\t      <div className=\"chat-input\">\r\n\t        <input type=\"text\"\r\n\t          name=\"textmsg\"\r\n\t          id=\"textmsg\"\r\n\t          disabled\r\n\t          placeholder=\"Enter your message and press enter...\"\r\n\t          required />\r\n\t        <Button style={{display:'none'}} className=\"primary\" name='click' id=\"click\" onClick={this.props.handleclick}>Click Me</Button>\r\n\t      </div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n\r\nexport default ProjectInput;","import React, { Component } from 'react';\r\nimport openSocket from 'socket.io-client';\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport ProjectHeading from './ProjectHeading.js';\r\nimport ProjectNavbar from './ProjectNavbar.js';\r\nimport ProjectMessages from './ProjectMessages.js';\r\nimport ProjectInput from './ProjectInput.js';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { css } from 'glamor';\r\n\r\nrequire('./testcss.css');\r\n\r\nclass ChatApp extends Component {\r\n  constructor(props) {\r\n    console.log('inside constructor');\r\n    super(props);\r\n    this.handleclick = this.handleclick.bind(this);\r\n    this.sendnotifications = this.sendnotifications.bind(this);\r\n    this.updateclicked = this.updateclicked.bind(this);\r\n\r\n    this.state = {\r\n      socket: openSocket('/'),\r\n      messages: {},\r\n      users: 0,\r\n      name: 'user'+ Math.floor(Math.random() * 1000), \r\n      user_list: [],\r\n      opponent: '',\r\n      notifications: {},\r\n    };\r\n\r\n\r\n    this.state.socket.emit('setname', this.state.name);\r\n    console.log('client emit setname');\r\n\r\n    this.state.socket.on('users_list', list => {\r\n      console.log('server sent users_list');\r\n      console.log(JSON.stringify(list));\r\n      this.setState({\r\n        user_list : list.list\r\n      })\r\n    })\r\n\r\n    this.state.socket.on('users_online', count => {\r\n      console.log('server sent users_online '+ count);\r\n      if ( count <= 1) {\r\n        document.getElementById(\"textmsg\").disabled = true;\r\n\r\n        this.setState({\r\n          messages: {},\r\n          opponent: '',\r\n          notifications: {},\r\n          users: 0,\r\n        })\r\n\r\n      }\r\n      else {\r\n        this.setState({\r\n          users: count-1,\r\n        });\r\n      }\r\n    })\r\n\r\n    this.state.socket.on('usermessage', msg => {\r\n      console.log('server sent message ');\r\n      console.log(JSON.stringify(msg));\r\n      var allmsg = this.state.messages;\r\n      var array = allmsg[msg.username];\r\n      if ( !array) { array = []; }\r\n      array.push(msg);\r\n      allmsg[msg.username] = array;\r\n\r\n      if ( this.state.opponent !== msg.username) {\r\n\r\n        var toastmsg = msg.username + ':- ' + msg.message;\r\n        this.sendnotifications(toastmsg);\r\n\r\n\r\n        var notify = this.state.notifications;\r\n        if ( notify[msg.username] > 0) {\r\n          notify[msg.username] += 1;\r\n        }\r\n        else {\r\n          notify[msg.username] = 1;\r\n        }\r\n        this.setState({\r\n          messages: allmsg,\r\n          notifications: notify\r\n        });\r\n      }\r\n      else{\r\n        this.setState({\r\n          messages: allmsg\r\n        });\r\n      }\r\n    })\r\n\r\n\r\n  }\r\n\r\n  sendnotifications(toastmsg) {\r\n\r\n    toast.info(toastmsg,{\r\n      bodyClassName: css({\r\n        fontSize: '20px'\r\n      })\r\n    });\r\n  }\r\n\r\n  componentDidMount(){\r\n\r\n      console.log('componentDidMount');\r\n      var input = document.getElementById(\"textmsg\");\r\n      input.addEventListener(\"keyup\", function(event) {\r\n        if (event.keyCode === 13) {\r\n          event.preventDefault();\r\n          document.getElementById(\"click\").click();\r\n        }\r\n      })\r\n  }\r\n\r\n  updateclicked(e) {\r\n    console.log('updateclicked');\r\n    if ( this.state.opponent !== e.name ){\r\n      document.getElementById(\"textmsg\").disabled = false;\r\n      document.getElementById(\"textmsg\").focus();\r\n      var notify = this.state.notifications;\r\n      notify[e.name] = 0;\r\n      this.setState({\r\n        opponent: e.name,\r\n        notifications: notify\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n  handleclick(){\r\n\r\n\r\n    console.log('handleclick');\r\n    var isdisabled =document.getElementById(\"textmsg\").disabled;\r\n\r\n    if ( isdisabled === false){\r\n      //const out = document.getElementById(\"chatbox\")\r\n      //const isScrolledToBottom = out.scrollHeight - out.clientHeight <= out.scrollTop + 1\r\n      //out.scrollTop = out.scrollHeight - out.clientHeight\r\n\r\n      var val = document.getElementById(\"textmsg\").value;\r\n      var allmsg = this.state.messages;\r\n      var array = allmsg[this.state.opponent];\r\n      if ( !array) { array = []; }\r\n      array.push({ username: this.state.name, message: val});\r\n      allmsg[this.state.opponent] = array;\r\n\r\n      this.setState({\r\n        messages: allmsg\r\n      })      \r\n      \r\n      var component = {\r\n        value: val,\r\n        receiver: this.state.opponent,\r\n        sender: this.state.name,\r\n      };\r\n\r\n      this.state.socket.emit('click',component);\r\n      document.getElementById(\"textmsg\").value = '';\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    console.log('componentDidUpdate');\r\n      var messages = this.state.messages[this.state.opponent];\r\n      if ( !messages) { messages = []; }\r\n      if ( messages.length > 0 ){\r\n        const objDiv = document.getElementById('messageList');\r\n        objDiv.scrollTop = objDiv.scrollHeight;\r\n      }\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n\r\n      return (\r\n        <div className=\"container\">\r\n          <ProjectHeading name={this.state.name}/>\r\n          <ProjectNavbar \r\n            users={this.state.users} \r\n            user_list={this.state.user_list} \r\n            notifications={this.state.notifications} \r\n            name={this.state.name}\r\n            updateclicked={this.updateclicked}\r\n          />\r\n          <ProjectMessages \r\n            messages={this.state.messages}\r\n            opponent={this.state.opponent}\r\n            name={this.state.name}\r\n          />\r\n\r\n          <ProjectInput handleclick={this.handleclick} />\r\n        </div>\r\n      );\r\n\r\n  }\r\n}\r\n\r\n\r\n/*\r\n\r\n\r\n\r\n\r\n*/\r\nexport default ChatApp;\r\n","import React, { Component } from 'react';\n//import './App.css';\nimport ChatApp from './ChatApp.js';\n//import LoginApp from './LoginApp.js';\nrequire('./testcss.css');\n\n\nclass App extends Component {\n  render() {\n    return (<ChatApp/>);\n  }\n}\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}